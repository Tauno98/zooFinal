
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
/**
 *
 * @author Alain
 */
public class PanelEspecialidad extends javax.swing.JPanel {

    Conectar con = new Conectar();
    Connection conet;
    DefaultTableModel model;
    Statement st;
    ResultSet rs;
    int idc;

    /**
     * Creates new form PanelEspecialidad
     */
    public PanelEspecialidad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEspecialidad = new javax.swing.JTable();
        jButtonEditar = new javax.swing.JButton();
        jButtonMostrar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jButtonInsertar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableEspecialidad.setBackground(new java.awt.Color(153, 153, 153));
        jTableEspecialidad.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Especialidad", "salario", "Peligrosidad", "Descripcion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEspecialidad);
        if (jTableEspecialidad.getColumnModel().getColumnCount() > 0) {
            jTableEspecialidad.getColumnModel().getColumn(0).setResizable(false);
            jTableEspecialidad.getColumnModel().getColumn(1).setResizable(false);
            jTableEspecialidad.getColumnModel().getColumn(2).setResizable(false);
            jTableEspecialidad.getColumnModel().getColumn(3).setResizable(false);
            jTableEspecialidad.getColumnModel().getColumn(4).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 144, 530, 400));

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        add(jButtonEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jButtonMostrar.setText("Mostrar");
        jButtonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarActionPerformed(evt);
            }
        });
        add(jButtonMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 100, -1, -1));

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });
        add(jButtonBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, -1, -1));

        jButtonInsertar.setText("Insertar");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });
        add(jButtonInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));

        jLabel2.setFont(new java.awt.Font("Sitka Display", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Especialidad");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 530, -1));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 140));

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -2, 530, 150));
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        // TODO add your handling code here:
         JOptionPane.showMessageDialog(null, "Actualmente no esta en esta version");
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        addEspecialidad e = new addEspecialidad();
        e.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jButtonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarActionPerformed
        // TODO add your handling code here:
        consultar();
    }//GEN-LAST:event_jButtonMostrarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        // Borrar el registro
        int fila = jTableEspecialidad.getSelectedRow();
        if(fila == -1){
            JOptionPane.showMessageDialog(null, "No se seleccion√≥ fila");
        }else{
            idc = Integer.parseInt((String) jTableEspecialidad.getValueAt(fila, 0).toString());
            try{
                PreparedStatement elim = conet.prepareStatement("DELETE FROM especialidad WHERE id=' "+idc+"'");
                elim.executeUpdate();
                consultar();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e + "No se logro borrar el registro");
            }
            
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed
    private void consultar() {
        String sql = "SELECT * FROM especialidad";
        
        try {
            conet = con.getConexion();
            st = conet.createStatement();
            rs = st.executeQuery(sql);
            Object[] especialidad = new Object[5];

            model = (DefaultTableModel) jTableEspecialidad.getModel();
            while (rs.next()) {
                especialidad[0] = rs.getInt("id");
                especialidad[1] = rs.getString("especialidad");
                especialidad[2] = rs.getFloat("Salario");
                especialidad[3] = rs.getFloat("Peligrosidad");
                especialidad[4] = rs.getString("Descripcion");
                model.addRow(especialidad);
            }
            jTableEspecialidad.setModel(model);
        } catch (SQLException e) {
        }
    }
     private void limpiarTabla() {
        for (int i = 0; i <= jTableEspecialidad.getRowCount(); i++) {
            model.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonMostrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEspecialidad;
    // End of variables declaration//GEN-END:variables
}
