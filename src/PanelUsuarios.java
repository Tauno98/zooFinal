
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author alainfernandeznunez
 */
public class PanelUsuarios extends javax.swing.JPanel {
 Conectar con = new Conectar();
    Connection conet;
    DefaultTableModel model;
    Statement st;
    ResultSet rs;
    int idc;
    /**
     * Creates new form PanelUsuarios
     */
    public PanelUsuarios() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsuarios = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonMostrar = new javax.swing.JButton();
        jButtonInsertar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableUsuarios.setBackground(new java.awt.Color(153, 153, 153));
        jTableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Usuario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsuarios);
        if (jTableUsuarios.getColumnModel().getColumnCount() > 0) {
            jTableUsuarios.getColumnModel().getColumn(0).setResizable(false);
            jTableUsuarios.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 550, 430));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Usuarios");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 80));

        jButtonMostrar.setText("Mostrar");
        jButtonMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMostrarActionPerformed(evt);
            }
        });
        add(jButtonMostrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jButtonInsertar.setText("Insertar");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });
        add(jButtonInsertar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, -1, -1));

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        add(jButtonEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, -1, -1));

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });
        add(jButtonBorrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jTableUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsuariosMouseClicked

    }//GEN-LAST:event_jTableUsuariosMouseClicked

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        login a = new login();
        a.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
       JOptionPane.showMessageDialog(null, "Actualmente no esta en esta version");
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        int fila = jTableUsuarios.getSelectedRow();
        if(fila == -1){
            JOptionPane.showMessageDialog(null, "No se seleccion√≥ fila");
        }else{
            idc = Integer.parseInt((String) jTableUsuarios.getValueAt(fila, 0).toString());
            try{
                PreparedStatement elim = conet.prepareStatement("DELETE FROM usuarios WHERE id=' "+idc+"'");
                elim.executeUpdate();
                consultar();
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e + "No se logro borrar el registro");
            }
            
        }
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    private void jButtonMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMostrarActionPerformed
        // TODO add your handling code here:
        consultar();
    }//GEN-LAST:event_jButtonMostrarActionPerformed
 private void consultar() {
        String sql = "SELECT * FROM usuario";

        try {
            conet = con.getConexion();
            st = conet.createStatement();
            rs = st.executeQuery(sql);
            Object[] usuario = new Object[2];

            model = (DefaultTableModel) jTableUsuarios.getModel();
            while (rs.next()) {
                usuario[0] = rs.getInt("id");
                usuario[1] = rs.getString("Usuario");
                model.addRow(usuario);
            }
            jTableUsuarios.setModel(model);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void limpiarTabla(){
        for (int i =0 ; i<=jTableUsuarios.getRowCount();i++){
            model.removeRow(i);
        }
    }
    
    public void eliminarCliente(){
        int fila = jTableUsuarios.getSelectedRow();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonMostrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUsuarios;
    // End of variables declaration//GEN-END:variables
}
